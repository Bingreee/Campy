<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="campy.com.dao.ReserveDao">
<select id="countReserve" parameterType="String" resultType="int">
	select count(*) from reserve where id=#{id}
</select>

<select id="reserveList" parameterType="map" resultType="campy.com.dto.CampAndReserveDto">
	<![CDATA[
		select * from (select r.*, rownum r 
		from (select * from reserve where id = #{id} order by reserve_date desc) r 
		order by reserve_date desc) r2 ,camping 
		where r2.c_no=camping.c_no and r >= #{start} AND r <=#{end} order by reserve_date desc
	]]>
</select>

<!-- <select id="reserveStatus" parameterType="string" resultType="campy.com.dto.CampAndReserveDto" > 
	select * from reserve,camping where reserve.c_no = camping.c_no and id = #{id} order by reserve_date desc
</select>  -->

<select id="reserveDetail" parameterType="int" resultType="campy.com.dto.CampAndReserveDto">
	select * from reserve, camping where reserve.c_no = camping.c_no and reserve_no=#{reserve_no}
</select>

<delete id="deleteReserve" parameterType="campy.com.dto.ReserveDto">
	delete from reserve where reserve_no = #{reserve_no}
</delete>

<select id="adminReserve" resultType="campy.com.dto.CampAndReserveDto">
	select * from reserve,camping where reserve.c_no = camping.c_no order by reserve_date desc
</select>

<select id="countAllReserve" resultType="int">
	select count(*) from reserve
</select>

<select id="chkReserve" parameterType="int" resultType="int">
	select count(*) from review where reserve_no = #{reserve_no}
</select>

<!-- 위는 예약 아래는 리뷰 -->

<select id="countReview" parameterType="int" resultType="int">
	select count(*) from review where c_no = #{c_no}
</select>
  
<select id="reviewList" parameterType="map" resultType="campy.com.dto.ReviewDto">
	<![CDATA[
		select * from (select rv_no,rv_title,id,rv_date,rv_content,c_no,rate, rownum r 
		from (select * from review where c_no = #{c_no} order by rv_date desc) r order by rv_date desc) 
		where r >= #{start} AND r <=#{end}
	]]>
</select>
<!-- Dto에 start와 end가 없는 상태에서 2개 이상의 값을 보낼때 : map의 키 -->
  
<select id="reviewContent" parameterType="int" resultType="campy.com.dto.ReviewDto">
	select * from review where rv_no = #{rv_no}
</select>

<select id="reviewOne" parameterType="int" resultType="campy.com.dto.ReviewDto">
	select * from review where c_no = #{c_no} order by rv_no desc
</select> <!-- 캠핑장 선택에 따른 리뷰 보여주기 -->

<insert id="reviewWrite" parameterType="campy.com.dto.ReviewDto">
	insert into review(rv_no, rv_title, id, rv_date, rv_content, c_no, rate,reserve_no)
	values(seq_review.nextval, #{rv_title}, #{id}, sysdate, #{rv_content},#{c_no}, #{rate},#{reserve_no} )
</insert>

<delete id="reviewDelete" parameterType="int">
	delete from review where rv_no = #{rv_no}
</delete>

<update id="reviewUpdate" parameterType="campy.com.dto.ReviewDto">
	update review set rv_title=#{rv_title}, rv_content=#{rv_content},rate=#{rate} where rv_no=#{rv_no}
</update>

<select id="avgRate" parameterType="int" resultType="Long">
	select trunc(AVG(NVL(rate,0)),1) from review where c_no = #{c_no}
</select>

</mapper>